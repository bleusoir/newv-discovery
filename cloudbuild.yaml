steps:

  - # Uses the Cloud Builder Gradle image since it is cached.
    name: 'gcr.io/cloud-builders/gcloud'
    id: 'Cache'
    dir: /root
    entrypoint: bash
    args:
      - -c
      - |
        mkdir .docker &&
        ln -s $$HOME/.docker/config.json .docker/config.json

  - # Compiles the app and Jib build.
    name: 'openjdk:17.0.2-slim'
    id: 'Gradle jib build'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo registry url env
        echo $_NEWV_DISCOVERY_IMAGE_REGISTRY
        REGISTRY=${_NEWV_DISCOVERY_IMAGE_REGISTRY}
        chmod +x ./gradlew
        ./gradlew jib -Djib.to.image="$${REGISTRY}"

  - id: 'Deploy'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo $PROJECT_ID
        CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}
        PROJECT=$(gcloud config get-value core/project)
        ZONE=${_CLOUDSDK_COMPUTE_ZONE}
        gcloud container clusters get-credentials "$${CLUSTER}" \
          --project ${PROJECT_ID} \
          --zone "$${ZONE}"
        
        kubectl apply -f k8s/newv-discovery-deployment.yaml